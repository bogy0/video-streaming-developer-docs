{"version":3,"sources":["webpack:///./src/pages/viewer-authentication-api-using-viewer-authentication-with-other-services.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0eAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,gSACA,iMACA,kEACA,uBAAK,sBAAMC,WAAW,OAAU,IAA3B,gFAEL,+GACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,o5BAoCTJ,EAAWK,gBAAiB","file":"component---src-pages-viewer-authentication-api-using-viewer-authentication-with-other-services-mdx-b5ca684c96dff543cf5f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Besides the player there are some services (such as Chat, Q&A and Combined Embed) that may also require viewer authentication. In order to make the authentication work across these services, additional steps need to be taken at the end of the authentication flow.`}</p>\n    <p>{`These services provide a URL, that must be used instead of the default pass url. This URL is sent in the hashConsumer query parameter by the service to the application.`}</p>\n    <p>{`Example url in the hashConsumer for chat:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`https://video.ibm.com/chat/authorize/12345678?resource=%2Fchat%2F12345678\n`}</code></pre>\n    <p>{`Example script in native PHP that can authenticate the player and the services as well`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Given a json token has already been constructed\n$json = json_encode($response);\n\n// Default hash consumer for the player\n$hashConsumer = 'https://video.ibm.com/embed/hashlock/pass';\n$query = [];\n\n// Check if there is a special hash consumer\nif (!empty($_GET['hashConsumer'])) {\n    $hashConsumer = $_GET['hashConsumer'];\n\n    // It's recommended to use a better URL parsing\n    // technique (like PSR-7 implementations)\n    $parts = parse_url($hashConsumer);\n\n    if (!empty($parts['query'])) {\n        parse_str($parts['query'], $query);\n    }\n\n    // Instead of concatenating url parts it's recommended to use\n    // a better URL parsing technique (like PSR-7 implementations)\n    $hashConsumer = $parts['scheme'].'://'.$parts['host'].$parts['path'];\n}\n\n$query['hash'] = $json;\n\n$hashConsumer = $hashConsumer.'?'.http_build_query($query);\n\nheader('Location: '.$hashConsumer);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}