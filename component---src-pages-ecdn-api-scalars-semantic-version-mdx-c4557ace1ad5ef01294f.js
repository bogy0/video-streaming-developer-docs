(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{KwG6:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return i})),t.d(n,"default",(function(){return b}));t("91GP"),t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("q1tI");var r=t("7ljp"),o=t("XbGe"),a=t("Drr0");t("qKvR");function c(){return(c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var i={},p={_frontmatter:i},s=o.a;function b(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,["components"]);return Object(r.b)(s,c({},p,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The SemanticVersion scalar type is a software version represented as UTF-8 character sequences.\nAccepted format is: ",Object(r.b)("inlineCode",{parentName:"p"},"MAJOR.MINOR.PATCH"),". i.e: ",Object(r.b)("inlineCode",{parentName:"p"},"0.0.1"),", ",Object(r.b)("inlineCode",{parentName:"p"},"1.0.0"),", ",Object(r.b)("inlineCode",{parentName:"p"},"2.4.3"),"."),Object(r.b)(a.k,{mdxType:"GQLCodeSnippet"},Object(r.b)(a.e,{mdxType:"GQLLine"},Object(r.b)(a.d,{mdxType:"GQLKeyword"},"scalar")," SemanticVersion")))}b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-ecdn-api-scalars-semantic-version-mdx-c4557ace1ad5ef01294f.js.map