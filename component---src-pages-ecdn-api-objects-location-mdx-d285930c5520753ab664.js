(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{jWku:function(e,t,b){"use strict";b.r(t),b.d(t,"_frontmatter",(function(){return o})),b.d(t,"default",(function(){return m}));b("91GP"),b("rGqo"),b("yt8O"),b("Btvt"),b("RW0V"),b("q1tI");var n=b("7ljp"),c=b("XbGe"),a=b("Drr0");b("qKvR");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var b=arguments[t];for(var n in b)Object.prototype.hasOwnProperty.call(b,n)&&(e[n]=b[n])}return e}).apply(this,arguments)}var o={},d={_frontmatter:o},r=c.a;function m(e){var t=e.components,b=function(e,t){if(null==e)return{};var b,n,c={},a=Object.keys(e);for(n=0;n<a.length;n++)b=a[n],t.indexOf(b)>=0||(c[b]=e[b]);return c}(e,["components"]);return Object(n.b)(r,i({},d,b,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,"A customerâ€™s location."),Object(n.b)(a.k,{mdxType:"GQLCodeSnippet"},Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.d,{mdxType:"GQLKeyword"},"type")," Location ",Object(n.b)(a.h,{mdxType:"GQLOpen"})),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# ID of location.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"id"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/ID",mdxType:"GQLLink"},"ID"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Name of location.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"name"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/String",mdxType:"GQLLink"},"String"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Number of servers in location.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"numberOfServers"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/Int",mdxType:"GQLLink"},"Int"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Servers in location.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"servers"),": [",Object(n.b)(a.f,{href:"/ecdn-api-objects/Server",mdxType:"GQLLink"},"Server"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!"),"]",Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Parent location or region of location.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"parent"),": ",Object(n.b)(a.f,{href:"/ecdn-api-unions/LocationsParent",mdxType:"GQLLink"},"LocationsParent"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# (direct) Child locations of location.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"children"),": [",Object(n.b)(a.f,{href:"/ecdn-api-objects/Location",mdxType:"GQLLink"},"Location"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!"),"]",Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Depth of (deepest possible) child location chain (starting from this location).")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# * A location without any children has children a depth of 0.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# * A location with a child that doesn't have any children has a depth of 1.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# * A location that has at least one child with children has a depth of 2.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"childrenDepth"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/Int",mdxType:"GQLLink"},"Int"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# The maximum children depth this location can have. A maximum of 3 locations can be chained")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# together. Therefore if a location:")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# * Is a top-level one, the maximum children depth is 2")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"#   (it can have child locations with children).")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# * Has a top-level location as parent: the maximum children depth is 1")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"#   (can have children, but they cannot have additional children).")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# * Has a parent location with a parent location: the maximum children depth is 0")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"#   (cannot have children, would exceed the overall -3- depth limit).")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"childrenDepthLimit"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/Int",mdxType:"GQLLink"},"Int"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# External IP ranges of location.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"externalRanges"),": [",Object(n.b)(a.f,{href:"/ecdn-api-scalars/IPv4Range",mdxType:"GQLLink"},"IPv4Range"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!"),"]",Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Whether external ranges are inherited from parent location.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"inheritExternalRanges"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/Boolean",mdxType:"GQLLink"},"Boolean"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Restriction for client connections. Null if there aren't any restrictions.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"clientRestriction"),": ",Object(n.b)(a.f,{href:"/ecdn-api-objects/ClientRestriction",mdxType:"GQLLink"},"ClientRestriction")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Whether clients can connect to servers in this location or not.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"clientConnectionsEnabled"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/Boolean",mdxType:"GQLLink"},"Boolean"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Whether clients can fall back to external CDNs or not.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"cdnFallbackEnabled"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/Boolean",mdxType:"GQLLink"},"Boolean"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Whether management traffic of servers in location are proxied through parent servers.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Video traffic is proxied through parent servers in all cases.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Management traffic can only be proxied through ECDN servers (i.e: not through midgress),")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# therefore this can only be enabled in child locations.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"parentProxyEnabled"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/Boolean",mdxType:"GQLLink"},"Boolean"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# What time was this location created and by whom.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"created"),": ",Object(n.b)(a.f,{href:"/ecdn-api-objects/RecordedAction",mdxType:"GQLLink"},"RecordedAction"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Last time this location was modified and by whom.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"modified"),": ",Object(n.b)(a.f,{href:"/ecdn-api-objects/RecordedAction",mdxType:"GQLLink"},"RecordedAction"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.b,{mdxType:"GQLClose"}))),Object(n.b)("h2",null,"Fields"),Object(n.b)("h3",null,"id: ",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/ID"}),"ID"),"!"),Object(n.b)("p",null,"ID of location."),Object(n.b)("h3",null,"name: ",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/String"}),"String"),"!"),Object(n.b)("p",null,"Name of location."),Object(n.b)("h3",null,"numberOfServers: ",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/Int"}),"Int"),"!"),Object(n.b)("p",null,"Number of servers in location."),Object(n.b)("h3",null,"servers: [",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-objects/Server"}),"Server"),"!]!"),Object(n.b)("p",null,"Servers in location."),Object(n.b)("h3",null,"parent: ",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-unions/LocationsParent"}),"LocationsParent"),"!"),Object(n.b)("p",null,"Parent location or region of location."),Object(n.b)("h3",null,"children: [",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-objects/Location"}),"Location"),"!]!"),Object(n.b)("p",null,"(direct) Child locations of location."),Object(n.b)("h3",null,"childrenDepth: ",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/Int"}),"Int"),"!"),Object(n.b)("p",null,"Depth of (deepest possible) child location chain (starting from this location)."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"A location without any children has children a depth of 0."),Object(n.b)("li",{parentName:"ul"},"A location with a child that doesnâ€™t have any children has a depth of 1."),Object(n.b)("li",{parentName:"ul"},"A location that has at least one child with children has a depth of 2.")),Object(n.b)("h3",null,"childrenDepthLimit: ",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/Int"}),"Int"),"!"),Object(n.b)("p",null,"The maximum children depth this location can have. A maximum of 3 locations can be chained\ntogether. Therefore if a location:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Is a top-level one, the maximum children depth is 2\n(it can have child locations with children)."),Object(n.b)("li",{parentName:"ul"},"Has a top-level location as parent: the maximum children depth is 1\n(can have children, but they cannot have additional children)."),Object(n.b)("li",{parentName:"ul"},"Has a parent location with a parent location: the maximum children depth is 0\n(cannot have children, would exceed the overall -3- depth limit).")),Object(n.b)("h3",null,"externalRanges: [",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/IPv4Range"}),"IPv4Range"),"!]!"),Object(n.b)("p",null,"External IP ranges of location."),Object(n.b)("h3",null,"inheritExternalRanges: ",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/Boolean"}),"Boolean"),"!"),Object(n.b)("p",null,"Whether external ranges are inherited from parent location."),Object(n.b)("h3",null,"clientRestriction: ",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-objects/ClientRestriction"}),"ClientRestriction")),Object(n.b)("p",null,"Restriction for client connections. Null if there arenâ€™t any restrictions."),Object(n.b)("h3",null,"clientConnectionsEnabled: ",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/Boolean"}),"Boolean"),"!"),Object(n.b)("p",null,"Whether clients can connect to servers in this location or not."),Object(n.b)("h3",null,"cdnFallbackEnabled: ",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/Boolean"}),"Boolean"),"!"),Object(n.b)("p",null,"Whether clients can fall back to external CDNs or not."),Object(n.b)("h3",null,"parentProxyEnabled: ",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/Boolean"}),"Boolean"),"!"),Object(n.b)("p",null,"Whether management traffic of servers in location are proxied through parent servers.\nVideo traffic is proxied through parent servers in all cases.\nManagement traffic can only be proxied through ECDN servers (i.e: not through midgress),\ntherefore this can only be enabled in child locations."),Object(n.b)("h3",null,"created: ",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-objects/RecordedAction"}),"RecordedAction"),"!"),Object(n.b)("p",null,"What time was this location created and by whom."),Object(n.b)("h3",null,"modified: ",Object(n.b)("a",i({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-objects/RecordedAction"}),"RecordedAction"),"!"),Object(n.b)("p",null,"Last time this location was modified and by whom."))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-ecdn-api-objects-location-mdx-d285930c5520753ab664.js.map