(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{"upN+":function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return s})),t.d(n,"default",(function(){return l}));t("91GP"),t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("q1tI");var a=t("7ljp"),r=t("XbGe");t("qKvR");function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}var s={},i={_frontmatter:s},c=r.a;function l(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,["components"]);return Object(a.b)(c,o({},i,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",null,"Introduction"),Object(a.b)("p",null,"The IBM ECDN (Enterprise Content Delivery Network) API lets you monitor and manage your ECDN locations, servers and other resources."),Object(a.b)("h2",null,"Try it out"),Object(a.b)("p",null,Object(a.b)("a",o({parentName:"p"},{href:"https://ecdn.video.ibm.com/graphiql"}),"API Browser")," is the easiest way to try ECDN’s GraphQL API.\nYou can log in via your ECDN credentials.\nGenerated documentation can be found by opening ",Object(a.b)("inlineCode",{parentName:"p"},"Docs")," in the upper-right corner, which are also available on this site."),Object(a.b)("h2",null,"GraphQL"),Object(a.b)("p",null,"We suggest reading the ",Object(a.b)("a",o({parentName:"p"},{href:"https://graphql.org/learn/"}),"official GraphQL documentation"),"\nto get a basic understanding of its usage. This documentation focuses on ECDN specific usage."),Object(a.b)("h3",null,"All/specific resources"),Object(a.b)("p",null,"We will use ",Object(a.b)("inlineCode",{parentName:"p"},"servers")," and ",Object(a.b)("inlineCode",{parentName:"p"},"locations")," throughout this document, which covers all servers and/or all locations when used.\nIf you want to query them one-by-one use ",Object(a.b)("inlineCode",{parentName:"p"},"serverByID")," and ",Object(a.b)("inlineCode",{parentName:"p"},"locationByID")," instead. i.e:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-graphql"}),"{\n    locations {\n        id\n        name\n    }\n}\n")),Object(a.b)("p",null,"will return ID and name of all locations, where"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-graphql"}),'{\n    locationByID(id:"bG9jYXRpb246MzA1") {\n        id\n        name\n    }\n}\n')),Object(a.b)("p",null,"will return ID and name of location with ID of ",Object(a.b)("inlineCode",{parentName:"p"},'"bG9jYXRpb246MzA1"')," only (if it exists)."),Object(a.b)("h3",null,"Example queries"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Locations ID, name, external ranges and number of servers."),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",o({parentName:"pre"},{className:"language-graphql"}),"{\n    locations {\n        id\n        name\n        numberOfServers\n        externalRanges\n    }\n}\n"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Servers ID, FQDN, CPU, memory, system disk size (in bytes), cache disk size (in bytes), IP address,\nlocation name, ECDN version with patch level and last check in date."),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",o({parentName:"pre"},{className:"language-graphql"}),"{\n    servers {\n        id\n        fqdn\n        lastCheckIn\n        location {\n            name\n        }\n        update {\n            ecdnVersion\n            patchLevel\n        }\n        hardware {\n            cpuCores\n            memory\n            systemDiskSize\n            cacheDiskSize\n        }\n        desiredConfiguration {\n            interfaces{\n                localIP\n            }\n        }\n    }\n}\n"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Servers ID, FQDN, detailed health and status of video delivery."),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",o({parentName:"pre"},{className:"language-graphql"}),"{\n    servers {\n        id\n        fqdn\n        health {\n            contentDelivery {\n                aggregated\n                upstreams\n                caching\n            }\n            operations {\n                aggregated\n                updates\n                softwareVersion\n                apiConnection\n                metrics\n                ntp\n                logForward\n                remoteAssistance\n                snmp\n            }\n        }\n        videoDelivery {\n            currentNumberOfViewers\n            currentNumberOfBuffering\n        }\n    }\n}\n")))),Object(a.b)("h2",null,"Basic workflow"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Fetch tokens."),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",o({parentName:"pre"},{className:"language-sh"}),'curl \'https://api.ecdn.video.ibm.com/v1/login\' \\\n    -d \'{"email":"...","password":"..."}\'\n')),Object(a.b)("p",{parentName:"li"},"Returns:"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",o({parentName:"pre"},{className:"language-json"}),'{\n    # JWT token, see https://jwt.io.\n    "accessToken": "YOUR_ACCESS_TOKEN",\n    # This can only be used once.\n    "refreshToken": "YOUR_REFRESH_TOKEN",\n    # Currently, refresh token expires in one day.\n    "refreshAgeSeconds": 86400\n}\n'))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Use API with access token. Note that all if you had a query ",Object(a.b)("inlineCode",{parentName:"p"},"{servers{id}}")," at API Browser,\nyou must send it as ",Object(a.b)("inlineCode",{parentName:"p"},'\'{"query":"{servers{id}}"}\'')," if you use the API directly."),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",o({parentName:"pre"},{className:"language-sh"}),"curl -H 'Authorization: Bearer YOUR_ACCESS_TOKEN' \\\n    https://api.ecdn.video.ibm.com/v1/graphql \\\n    -d '{\"query\":\"{servers{id}}\"}'\n"))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Refresh tokens. Currently your access token expires in 5 minutes.\nThe actual expiration time can be extracted from ",Object(a.b)("a",o({parentName:"p"},{href:"https://jwt.io"}),"JWT"),"’s ",Object(a.b)("inlineCode",{parentName:"p"},"exp")," field.\nTherefore, you must use your refresh token to request a new access token before/if it expires."),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",o({parentName:"pre"},{className:"language-sh"}),"curl 'https://api.ecdn.video.ibm.com/v1/token/refresh' \\\n    -d '{\"refreshToken\":\"YOUR_REFRESH_TOKEN\"}'\n")),Object(a.b)("p",{parentName:"li"},"Returns:"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",o({parentName:"pre"},{className:"language-json"}),'{\n    # JWT token, see https://jwt.io.\n    "accessToken": "YOUR_NEW_ACCESS_TOKEN",\n    # This can only be used once.\n    "refreshToken": "YOUR_NEW_REFRESH_TOKEN",\n    # Currently, refresh token expires in one day.\n    "refreshAgeSeconds": 86400\n}\n')))))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-ecdn-api-getting-started-mdx-20c4444201f361ca1176.js.map