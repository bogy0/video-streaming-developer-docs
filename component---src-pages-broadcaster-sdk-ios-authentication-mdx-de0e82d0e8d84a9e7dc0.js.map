{"version":3,"sources":["webpack:///./src/pages/broadcaster-sdk-ios/authentication.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,uNAAsM,0BAAYC,WAAW,KAAvB,4BAAtM,aAAwR,mBAAGA,WAAW,KAAQ,CAC1S,KAAQ,4FAD4Q,wDAAxR,0HAE4L,0BAAYA,WAAW,KAAvB,0BAF5L,2CAGA,qDACA,sBACE,kBAAIA,WAAW,MAAf,yCAA8D,0BAAYA,WAAW,MAAvB,uDAA9D,gDACA,kBAAIA,WAAW,MAAf,wBAA6C,0BAAYA,WAAW,MAAvB,yCAA7C,cAA8I,0BAAYA,WAAW,MAAvB,+BAA9I,cACA,kBAAIA,WAAW,MAAf,SAA8B,0BAAYA,WAAW,MAAvB,sBAA9B,sBAAoH,0BAAYA,WAAW,MAAvB,WAApH,uCACA,kBAAIA,WAAW,MAAf,qHAA0I,0BAAYA,WAAW,MAAvB,4BAA1I,oBAAoO,0BAAYA,WAAW,MAAvB,8BAApO,sBACA,kBAAIA,WAAW,MAAf,2DAAgF,0BAAYA,WAAW,MAAvB,qCAAhF,oCAAmM,0BAAYA,WAAW,MAAvB,4BAAnM,KAA8Q,0BAAYA,WAAW,MAAvB,gBAA9Q,KACA,kBAAIA,WAAW,MAAf,oCAAyD,0BAAYA,WAAW,MAAvB,0CAAzD,cAA2J,0BAAYA,WAAW,MAAvB,+BAA3J,oGAEF,kEAAiD,mBAAGA,WAAW,KAAQ,CACnE,KAAQ,sEADqC,mCAAjD,wDAOJJ,EAAWK,gBAAiB","file":"component---src-pages-broadcaster-sdk-ios-authentication-mdx-de0e82d0e8d84a9e7dc0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`IBM Video Streaming SDK provides a secure way to authenticate users with IBM ID or legacy Ustream account and getting access for IBM Channel API features for example listing or broadcasting. `}<inlineCode parentName=\"p\">{`IBMWatsonMediaAuthClient`}</inlineCode>{` wraps up `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.video.ibm.com/channel-api/getting-started.html#authorization-flows_2\"\n      }}>{`IBM Video Streaming Channel APIs Authentication flow`}</a>{` and implements a basic authentication service that present the IBM Video Streaming authentication site in an embedded `}<inlineCode parentName=\"p\">{`SFSafariViewController`}</inlineCode>{` on iOS or in default browser on macOS.`}</p>\n    <p>{`Current authentication flow:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Set up the authentication client with `}<inlineCode parentName=\"li\">{`configureClientWithClientID:redirectURI:completion:`}</inlineCode>{` must be called prior to any other requests.`}</li>\n      <li parentName=\"ul\">{`Open login site with `}<inlineCode parentName=\"li\">{`requestLoginWithPresenter:completion:`}</inlineCode>{` on iOS or `}<inlineCode parentName=\"li\">{`requestLoginWithCompletion:`}</inlineCode>{` on macOS.`}</li>\n      <li parentName=\"ul\">{`Place `}<inlineCode parentName=\"li\">{`handleRedirectURL:`}</inlineCode>{` into AppDelegates `}<inlineCode parentName=\"li\">{`openURL`}</inlineCode>{` callback for handling redirection.`}</li>\n      <li parentName=\"ul\">{`If user successfully logged in credentials (access token, refresh token, id token payload) will be accessible via `}<inlineCode parentName=\"li\">{`IBMWatsonMediaAuthClient`}</inlineCode>{` properties. See `}<inlineCode parentName=\"li\">{`IBMWatsonMediaAuthClient.h`}</inlineCode>{` for more details.`}</li>\n      <li parentName=\"ul\">{`If access token expires a new one can be requested with `}<inlineCode parentName=\"li\">{`requestFreshTokensWithCompletion:`}</inlineCode>{` it gets a new access token with `}<inlineCode parentName=\"li\">{`IBMWatsonMediaAuthClient`}</inlineCode>{`s `}<inlineCode parentName=\"li\">{`refreshToken`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`For log out host app should call `}<inlineCode parentName=\"li\">{`requestLogoutWithPresenter:completion:`}</inlineCode>{` on iOS or `}<inlineCode parentName=\"li\">{`requestLoginWithCompletion:`}</inlineCode>{` on macOS. These methods opens authentication site for invalidate tokens and other credentials.`}</li>\n    </ul>\n    <p>{`For more details see sample apps or visit `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.video.ibm.com/channel-api/getting-started.html\"\n      }}>{`IBM Video Streaming Channel API`}</a>{` page for more information about Channel API usage.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}