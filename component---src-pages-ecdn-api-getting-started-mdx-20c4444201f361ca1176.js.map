{"version":3,"sources":["webpack:///./src/pages/ecdn-api-getting-started.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"2eAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,sCACA,6JACA,oCACA,qBAAG,mBAAGC,WAAW,KAAQ,CACrB,KAAQ,wCADT,eAAH,8IAI8C,0BAAYA,WAAW,KAAvB,QAJ9C,sEAKA,iCACA,+CAA8B,mBAAGA,WAAW,KAAQ,CAChD,KAAQ,+BADkB,kCAA9B,mGAIA,gDACA,oCAAmB,0BAAYA,WAAW,KAAvB,WAAnB,QAA+E,0BAAYA,WAAW,KAAvB,aAA/E,iIACuC,0BAAYA,WAAW,KAAvB,cADvC,QACsG,0BAAYA,WAAW,KAAvB,gBADtG,kBAEA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,qBADZ,6DASL,wEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,qBADZ,uFASL,uEAAsD,0BAAYA,WAAW,KAAvB,sBAAtD,yBACA,yCACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,8DACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,qBADI,+GAYvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,6KAEA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,qBADI,4bA6BvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mEACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,qBADI,smBAiCzB,wCACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,iBACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,gBADI,uGAKrB,iBAAGA,WAAW,MAAd,YACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,kBADI,6PAYvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,+DAAmF,0BAAYA,WAAW,KAAvB,iBAAnF,yCACc,0BAAYA,WAAW,KAAvB,iCADd,iCAEA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,gBADI,sJAOvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,uHAC2C,mBAAGA,WAAW,KAAQ,CAC7D,KAAQ,mBAD+B,OAD3C,MAGuB,0BAAYA,WAAW,KAAvB,OAHvB,2GAKA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,gBADI,oHAKrB,iBAAGA,WAAW,MAAd,YACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,kBADI,uQAiB7BJ,EAAWK,gBAAiB","file":"component---src-pages-ecdn-api-getting-started-mdx-20c4444201f361ca1176.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Introduction`}</h2>\n    <p>{`The IBM ECDN (Enterprise Content Delivery Network) API lets you monitor and manage your ECDN locations, servers and other resources.`}</p>\n    <h2>{`Try it out`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://ecdn.video.ibm.com/graphiql\"\n      }}>{`API Browser`}</a>{` is the easiest way to try ECDN’s GraphQL API.\nYou can log in via your ECDN credentials.\nGenerated documentation can be found by opening `}<inlineCode parentName=\"p\">{`Docs`}</inlineCode>{` in the upper-right corner, which are also available on this site.`}</p>\n    <h2>{`GraphQL`}</h2>\n    <p>{`We suggest reading the `}<a parentName=\"p\" {...{\n        \"href\": \"https://graphql.org/learn/\"\n      }}>{`official GraphQL documentation`}</a>{`\nto get a basic understanding of its usage. This documentation focuses on ECDN specific usage.`}</p>\n    <h3>{`All/specific resources`}</h3>\n    <p>{`We will use `}<inlineCode parentName=\"p\">{`servers`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`locations`}</inlineCode>{` throughout this document, which covers all servers and/or all locations when used.\nIf you want to query them one-by-one use `}<inlineCode parentName=\"p\">{`serverByID`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`locationByID`}</inlineCode>{` instead. i.e:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`{\n    locations {\n        id\n        name\n    }\n}\n`}</code></pre>\n    <p>{`will return ID and name of all locations, where`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`{\n    locationByID(id:\"bG9jYXRpb246MzA1\") {\n        id\n        name\n    }\n}\n`}</code></pre>\n    <p>{`will return ID and name of location with ID of `}<inlineCode parentName=\"p\">{`\"bG9jYXRpb246MzA1\"`}</inlineCode>{` only (if it exists).`}</p>\n    <h3>{`Example queries`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Locations ID, name, external ranges and number of servers.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-graphql\"\n          }}>{`{\n    locations {\n        id\n        name\n        numberOfServers\n        externalRanges\n    }\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Servers ID, FQDN, CPU, memory, system disk size (in bytes), cache disk size (in bytes), IP address,\nlocation name, ECDN version with patch level and last check in date.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-graphql\"\n          }}>{`{\n    servers {\n        id\n        fqdn\n        lastCheckIn\n        location {\n            name\n        }\n        update {\n            ecdnVersion\n            patchLevel\n        }\n        hardware {\n            cpuCores\n            memory\n            systemDiskSize\n            cacheDiskSize\n        }\n        desiredConfiguration {\n            interfaces{\n                localIP\n            }\n        }\n    }\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Servers ID, FQDN, detailed health and status of video delivery.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-graphql\"\n          }}>{`{\n    servers {\n        id\n        fqdn\n        health {\n            contentDelivery {\n                aggregated\n                upstreams\n                caching\n            }\n            operations {\n                aggregated\n                updates\n                softwareVersion\n                apiConnection\n                metrics\n                ntp\n                logForward\n                remoteAssistance\n                snmp\n            }\n        }\n        videoDelivery {\n            currentNumberOfViewers\n            currentNumberOfBuffering\n        }\n    }\n}\n`}</code></pre>\n      </li>\n    </ul>\n    <h2>{`Basic workflow`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Fetch tokens.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`curl 'https://api.ecdn.video.ibm.com/v1/login' \\\\\n    -d '{\"email\":\"...\",\"password\":\"...\"}'\n`}</code></pre>\n        <p parentName=\"li\">{`Returns:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`{\n    # JWT token, see https://jwt.io.\n    \"accessToken\": \"YOUR_ACCESS_TOKEN\",\n    # This can only be used once.\n    \"refreshToken\": \"YOUR_REFRESH_TOKEN\",\n    # Currently, refresh token expires in one day.\n    \"refreshAgeSeconds\": 86400\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Use API with access token. Note that all if you had a query `}<inlineCode parentName=\"p\">{`{servers{id}}`}</inlineCode>{` at API Browser,\nyou must send it as `}<inlineCode parentName=\"p\">{`'{\"query\":\"{servers{id}}\"}'`}</inlineCode>{` if you use the API directly.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`curl -H 'Authorization: Bearer YOUR_ACCESS_TOKEN' \\\\\n    https://api.ecdn.video.ibm.com/v1/graphql \\\\\n    -d '{\"query\":\"{servers{id}}\"}'\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Refresh tokens. Currently your access token expires in 5 minutes.\nThe actual expiration time can be extracted from `}<a parentName=\"p\" {...{\n            \"href\": \"https://jwt.io\"\n          }}>{`JWT`}</a>{`’s `}<inlineCode parentName=\"p\">{`exp`}</inlineCode>{` field.\nTherefore, you must use your refresh token to request a new access token before/if it expires.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`curl 'https://api.ecdn.video.ibm.com/v1/token/refresh' \\\\\n    -d '{\"refreshToken\":\"YOUR_REFRESH_TOKEN\"}'\n`}</code></pre>\n        <p parentName=\"li\">{`Returns:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`{\n    # JWT token, see https://jwt.io.\n    \"accessToken\": \"YOUR_NEW_ACCESS_TOKEN\",\n    # This can only be used once.\n    \"refreshToken\": \"YOUR_NEW_REFRESH_TOKEN\",\n    # Currently, refresh token expires in one day.\n    \"refreshAgeSeconds\": 86400\n}\n`}</code></pre>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}