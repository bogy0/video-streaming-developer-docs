(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{DmGW:function(e,b,t){"use strict";t.r(b),t.d(b,"_frontmatter",(function(){return d})),t.d(b,"default",(function(){return p}));t("91GP"),t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("q1tI");var n=t("7ljp"),r=t("XbGe"),a=t("Drr0");t("qKvR");function c(){return(c=Object.assign||function(e){for(var b=1;b<arguments.length;b++){var t=arguments[b];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}var d={},o={_frontmatter:d},i=r.a;function p(e){var b=e.components,t=function(e,b){if(null==e)return{};var t,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],b.indexOf(t)>=0||(r[t]=e[t]);return r}(e,["components"]);return Object(n.b)(i,c({},o,t,{components:b,mdxType:"MDXLayout"}),Object(n.b)("p",null,"An ECDN server’s software configuration."),Object(n.b)(a.k,{mdxType:"GQLCodeSnippet"},Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.d,{mdxType:"GQLKeyword"},"type")," ServerConfiguration ",Object(n.b)(a.h,{mdxType:"GQLOpen"})),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# This configuration's status on ECDN server.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"status"),": ",Object(n.b)(a.f,{href:"/ecdn-api-enums/ConfigurationStatus",mdxType:"GQLLink"},"ConfigurationStatus"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Selected mode to apply this configuration to an ECDN server.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"mode"),": ",Object(n.b)(a.f,{href:"/ecdn-api-enums/ConfigurationMode",mdxType:"GQLLink"},"ConfigurationMode"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Whether content delivery is enabled or not.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"contentDeliveryEnabled"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/Boolean",mdxType:"GQLLink"},"Boolean"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Network interfaces of ECDN server.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Currently it's always a single interface with name of eth0.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"interfaces"),": [",Object(n.b)(a.f,{href:"/ecdn-api-objects/Interface",mdxType:"GQLLink"},"Interface"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!"),"]",Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# DNS servers used for name resolutions.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"dnsServers"),": [",Object(n.b)(a.f,{href:"/ecdn-api-scalars/ServerAddress",mdxType:"GQLLink"},"ServerAddress"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!"),"]",Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Address of NTP servers used by ECDN server.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Null in case ECDN server reported invalid (malformed) NTP server addresses.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"ntpServers"),": [",Object(n.b)(a.f,{href:"/ecdn-api-scalars/ServerAddress",mdxType:"GQLLink"},"ServerAddress"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!"),"]"),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Is remote assistance enabled on server.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"remoteAssistanceEnabled"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/Boolean",mdxType:"GQLLink"},"Boolean"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Is SNMP polling enabled on server.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"snmpEnabled"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/Boolean",mdxType:"GQLLink"},"Boolean"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Community string of SNMP v2c. Null if SNMP polling is disabled.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"snmpCommunityString"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/String",mdxType:"GQLLink"},"String")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Is log forwarding enabled on server.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"logForwardEnabled"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/Boolean",mdxType:"GQLLink"},"Boolean"),Object(n.b)(a.i,{mdxType:"GQLOperator"},"!")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Log collector's address. Null if log forwarding is disabled.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"logCollector"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/TransportAddress",mdxType:"GQLLink"},"TransportAddress")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Config CD's URL. Null if mode is remote configuration.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Returned URL expires in 24 hours.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"cdURL"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/String",mdxType:"GQLLink"},"String")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Image URL for the appropriate hypervisor.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Null if server configuration was created through legacy ECDN API (or legacy portal).")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.c,{mdxType:"GQLComment"},"# Returned URL expires in 24 hours.")),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.j,{mdxType:"GQLTab"}),Object(n.b)(a.g,{mdxType:"GQLName"},"imageURL"),": ",Object(n.b)(a.f,{href:"/ecdn-api-scalars/String",mdxType:"GQLLink"},"String")),Object(n.b)(a.e,{mdxType:"GQLLine"}," "),Object(n.b)(a.e,{mdxType:"GQLLine"},Object(n.b)(a.b,{mdxType:"GQLClose"}))),Object(n.b)("h2",null,"Fields"),Object(n.b)("h3",null,"status: ",Object(n.b)("a",c({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-enums/ConfigurationStatus"}),"ConfigurationStatus"),"!"),Object(n.b)("p",null,"This configuration’s status on ECDN server."),Object(n.b)("h3",null,"mode: ",Object(n.b)("a",c({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-enums/ConfigurationMode"}),"ConfigurationMode"),"!"),Object(n.b)("p",null,"Selected mode to apply this configuration to an ECDN server."),Object(n.b)("h3",null,"contentDeliveryEnabled: ",Object(n.b)("a",c({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/Boolean"}),"Boolean"),"!"),Object(n.b)("p",null,"Whether content delivery is enabled or not."),Object(n.b)("h3",null,"interfaces: [",Object(n.b)("a",c({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-objects/Interface"}),"Interface"),"!]!"),Object(n.b)("p",null,"Network interfaces of ECDN server.\nCurrently it’s always a single interface with name of eth0."),Object(n.b)("h3",null,"dnsServers: [",Object(n.b)("a",c({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/ServerAddress"}),"ServerAddress"),"!]!"),Object(n.b)("p",null,"DNS servers used for name resolutions."),Object(n.b)("h3",null,"ntpServers: [",Object(n.b)("a",c({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/ServerAddress"}),"ServerAddress"),"!]"),Object(n.b)("p",null,"Address of NTP servers used by ECDN server.\nNull in case ECDN server reported invalid (malformed) NTP server addresses."),Object(n.b)("h3",null,"remoteAssistanceEnabled: ",Object(n.b)("a",c({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/Boolean"}),"Boolean"),"!"),Object(n.b)("p",null,"Is remote assistance enabled on server."),Object(n.b)("h3",null,"snmpEnabled: ",Object(n.b)("a",c({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/Boolean"}),"Boolean"),"!"),Object(n.b)("p",null,"Is SNMP polling enabled on server."),Object(n.b)("h3",null,"snmpCommunityString: ",Object(n.b)("a",c({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/String"}),"String")),Object(n.b)("p",null,"Community string of SNMP v2c. Null if SNMP polling is disabled."),Object(n.b)("h3",null,"logForwardEnabled: ",Object(n.b)("a",c({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/Boolean"}),"Boolean"),"!"),Object(n.b)("p",null,"Is log forwarding enabled on server."),Object(n.b)("h3",null,"logCollector: ",Object(n.b)("a",c({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/TransportAddress"}),"TransportAddress")),Object(n.b)("p",null,"Log collector’s address. Null if log forwarding is disabled."),Object(n.b)("h3",null,"cdURL: ",Object(n.b)("a",c({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/String"}),"String")),Object(n.b)("p",null,"Config CD’s URL. Null if mode is remote configuration.\nReturned URL expires in 24 hours."),Object(n.b)("h3",null,"imageURL: ",Object(n.b)("a",c({parentName:"h3"},{href:"/video-streaming-developer-docs/ecdn-api-scalars/String"}),"String")),Object(n.b)("p",null,"Image URL for the appropriate hypervisor.\nNull if server configuration was created through legacy ECDN API (or legacy portal).\nReturned URL expires in 24 hours."))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-ecdn-api-objects-server-configuration-mdx-9edae547fa191bde6cbc.js.map