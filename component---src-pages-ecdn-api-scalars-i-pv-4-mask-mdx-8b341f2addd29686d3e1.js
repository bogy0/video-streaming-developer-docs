(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{EtL3:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return c})),t.d(n,"default",(function(){return l}));t("91GP"),t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("q1tI");var r=t("7ljp"),a=t("XbGe"),o=t("Drr0");t("qKvR");function i(){return(i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var c={},b={_frontmatter:c},p=a.a;function l(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(r.b)(p,i({},b,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The IPv4Mask scalar type is an IPv4 netmask represented as UTF-8 character sequences.\nAccepted formats are:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Short notation (number of leading zeros in binary). i.e: ",Object(r.b)("inlineCode",{parentName:"li"},"32"),", ",Object(r.b)("inlineCode",{parentName:"li"},"24"),", ",Object(r.b)("inlineCode",{parentName:"li"},"8"),"."),Object(r.b)("li",{parentName:"ul"},"Long notation (octets separated by dots). i.e: ",Object(r.b)("inlineCode",{parentName:"li"},"255.255.255.255"),", ",Object(r.b)("inlineCode",{parentName:"li"},"255.255.255.0"),", ",Object(r.b)("inlineCode",{parentName:"li"},"255.0.0.0"),".")),Object(r.b)(o.k,{mdxType:"GQLCodeSnippet"},Object(r.b)(o.e,{mdxType:"GQLLine"},Object(r.b)(o.d,{mdxType:"GQLKeyword"},"scalar")," IPv4Mask")))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-ecdn-api-scalars-i-pv-4-mask-mdx-8b341f2addd29686d3e1.js.map