(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{KFqV:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return i})),t.d(a,"default",(function(){return s}));t("91GP"),t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("q1tI");var r=t("7ljp"),n=t("XbGe");t("qKvR");function o(){return(o=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var i={},c={_frontmatter:i},l=n.a;function s(e){var a=e.components,t=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,["components"]);return Object(r.b)(l,o({},c,t,{components:a,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Video streams can contain multiple tracks of different types (usually video, audio and text such as for captions). The player SDK lets you control which of these\ntracks are selected and presented to the user. See this document’s ",Object(r.b)("inlineCode",{parentName:"p"},"MediaTrackChangeListener")," section or the corresponding javadoc for API reference."),Object(r.b)("h2",null,"Usage"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Set a ",Object(r.b)("inlineCode",{parentName:"li"},"MediaTrackChangeListener")," on an initialized player, call ",Object(r.b)("inlineCode",{parentName:"li"},"attach()")," when appropriate."),Object(r.b)("li",{parentName:"ul"},"When the player determines the available track groups\nit will report it through the listener’s ",Object(r.b)("inlineCode",{parentName:"li"},"void onMediaTracksChanged(MediaTrackGroupHolder mediaTrackGroups)")," callback."),Object(r.b)("li",{parentName:"ul"},"The ",Object(r.b)("inlineCode",{parentName:"li"},"mediaTrackGroups")," object holds the available media tracks for each track type. Use these to instruct the player’s specific renderers to\nplay a certain media track. A renderer can also be disabled.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Example"),": Selecting a subtitle / closed captions track"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-java"}),"UstreamPlayerFactory ustreamPlayerFactory = new UstreamPlayerFactory(API_KEY, activity);\nContentDescriptor contentDescriptor = new ContentDescriptor(ContentType.RECORDED, 123456L);\nUstreamPlayer player = ustreamPlayerFactory.createUstreamPlayer(contentDescriptor.toString());\nplayer.initWithContent(contentDescriptor);\nplayer.setMediaTracksChangeListener(mediaTrackChangeListener);\nplayer.attach();\n\n//... Inside the MediaTrackChangeListener\npublic void onMediaTracksChanged(MediaTrackGroupHolder mediaTrackGroups) {\n    availableTextTracks = trackGroupHolder.textTracks;\n    // Update the subtitle selector with the available subtitles\n}\n\n//... When the user selects a subtitle track from the selector:\nvoid selectTrack(MediaTrack mediaTrack) {\n    ustreamPlayer.selectTrackForRenderer(mediaTracks, null);\n}\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Example"),": Querying whether a ",Object(r.b)("inlineCode",{parentName:"p"},"MediaFormat")," is supported"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-java"}),"//... Inside the MediaTrackChangeListener\npublic void onMediaTracksChanged(MediaTrackGroupHolder mediaTrackGroups) {\n    for (MediaTrack videoTrack : mediaTrackGroups.videoTracks) {\n        for (MediaFormat videoFormat : videoTrack.mediaFormats) {\n            if (mediaTrackGroups.formatSupportInfo.isSupported(videoFormat)) {\n                logSupportedFormat(videoTrack, videoFormat);\n            } else {\n                logUnsupportedFormat(videoTrack, videoFormat);\n            }\n        }\n    }\n}\n")),Object(r.b)("p",null,"For more detailed and general examples please consult the provided sample app."))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-player-sdk-android-changing-tracks-mdx-741dd7a43059104a8d6d.js.map