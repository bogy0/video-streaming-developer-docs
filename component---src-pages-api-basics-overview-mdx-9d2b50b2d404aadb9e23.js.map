{"version":3,"sources":["webpack:///./src/pages/api-basics-overview.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,wCACA,6GACA,sBACE,kBAAIC,WAAW,MAAK,sBAAQA,WAAW,MAAnB,uBAApB,qKACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,2BAApB,oHACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,gCAApB,ySAA+X,mBAAGA,WAAW,MAAS,CAClZ,KAAQ,wCADmX,uCAA/X,MAGA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,oCAApB,yQAEF,mCACA,0KAEA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,2BAApB,mEACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,mBAApB,yIAEF,sCACA,qKACA,kDACA,0SACA,sGACA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,gBACH,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,6HAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,WACH,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,+RAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,UACH,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,wMAUVJ,EAAWK,gBAAiB","file":"component---src-pages-api-basics-overview-mdx-9d2b50b2d404aadb9e23.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Basic workflow`}</h2>\n    <p>{`The basic workflow of a third-party client (application or device) is the following.`}</p>\n    <ol>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Authorize the user:`}</strong>{` Obtain and validate the user’s credentials (username and password). The client must never store these credentials, only pass it to the server for authorization.`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Obtain an access token:`}</strong>{` The third-party client application can obtain an access token if the user’s credentials were entered correctly.`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Access the user’s resources:`}</strong>{` The client can use IBM Video Streaming’s REST API or the IBM Video Streaming Broadcasting Library to access the user’s resources (data) or to broadcast to the user’s channel. The client authorizes itself using the access token, with methods described by The OAuth 2.0 Authorization Framework (`}<a parentName=\"li\" {...{\n          \"href\": \"https://tools.ietf.org/html/rfc6749\"\n        }}>{`https://tools.ietf.org/html/rfc6749`}</a>{`).`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Refresh the token, if necessary:`}</strong>{` By default, access tokens expires within a day. If your application needs access to an IBM Video Streaming API beyond this period, it can use the refresh token (that is obtained when requesting the access token for the first time) to obtain new access tokens.`}</li>\n    </ol>\n    <h2>{`Endpoints`}</h2>\n    <p>{`The webpages and HTTP services invoked in during an authorization process are called endpoints.\nIBM Video Streaming has the following endpoints:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Authorization endpoint:`}</strong>{` this is the webpage where the user enters his/her credentials.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Token endpoint:`}</strong>{` this is the HTTP service where the access token can be obtained in an authorization code, client credentials or refresh token flow.`}</li>\n    </ul>\n    <h2>{`Access Token`}</h2>\n    <p>{`A token can be used to access the user’s resources, up until the token expires or the user revokes it through the token revocation endpoint.`}</p>\n    <h3>{`Token scopes, expiration`}</h3>\n    <p>{`Access tokens expire in a day and can access only a limited amount of resources. In the authorization process, the client can request extra permissions (scopes) from the user to overcome these limitations. These requests are shown to the user on the authorization endpoint.`}</p>\n    <p>{`IBM Video Streaming currently supports the following scope for access tokens:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`SCOPE`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`DESCRIPTION`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`broadcaster`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If this scope is enabled, the access token can be used for broadcasting to the IBM Video Streaming Broadcasting Library.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`openid`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The basic (and required) scope for OpenId Connect. This scope indicates that an application intends to obtain the application user’s identity. Beyond that, an application can ask for additional scopes by listing the requested scope names in the scope parameter, separated by spaces.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`email`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Returns the email claim, which contains the user’s email address, and email_verified status, which is a boolean indicating whether the email address was verified by the authentication service.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}