{"version":3,"sources":["webpack:///./src/pages/player-sdk-android/changelog.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-player-sdk-android-changelog-mdx-ed395a4f5c9fe24fc788.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`1.5.0 - 2021-06-07`}</h2>\n    <h3>{`Changed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Deprecated `}<strong parentName=\"li\">{`Ads Plugin`}</strong>{`. Support is no longer provided for this component.`}</li>\n      <li parentName=\"ul\">{`Updated external dependency: ExoPlayer to version 2.12.3.`}</li>\n    </ul>\n    <h2>{`1.4.0 - 2019-07-22`}</h2>\n    <h3>{`Changed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`We had to change `}<inlineCode parentName=\"li\">{`support-v4`}</inlineCode>{` to `}<inlineCode parentName=\"li\">{`androidx`}</inlineCode>{` libraries to solve support lib version collision.`}</li>\n      <li parentName=\"ul\">{`Changed flatdir Maven repository to normal local Maven repository:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gradle\"\n      }}>{`repositories {\n    maven {\n        name 'IBMLocal'\n        url new File(\"\\${rootProject.rootDir.path}/m2repository\").toURI()\n    }\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Changed module naming to `}<inlineCode parentName=\"li\">{`*-external`}</inlineCode>{`. For example:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`'tv.ustream.player:ibm-player-sdk-android-external:1.4.0'\n'tv.ustream.player:ibm-player-sdk-android-plugin-ads-external:1.4.0'\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Updated external dependency: ExoPlayer to version 2.10.2. Please update your `}<inlineCode parentName=\"li\">{`build.gradle`}</inlineCode>{` files with:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gradle\"\n      }}>{`    implementation 'com.google.android.exoplayer:exoplayer-core:2.10.2'\n    implementation 'com.google.android.exoplayer:exoplayer-ui:2.10.2'\n    implementation 'com.google.android.exoplayer:exoplayer-hls:2.10.2'\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Changes affecting only Ads Plugin users`}</strong>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Ads Plugin`}</strong>{`’s external dependencies updated.\nIf you are using the plugin please update your `}<inlineCode parentName=\"li\">{`build.gradle`}</inlineCode>{` files with:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gradle\"\n      }}>{`    implementation 'tv.ustream.player:ibm-player-sdk-android-plugin-ads-external:1.4.0'\n    implementation 'com.google.ads.interactivemedia.v3:interactivemedia:3.11.3'\n    implementation 'com.google.android.gms:play-services-ads-identifier:17.0.0'\n    implementation 'androidx.browser:browser:1.0.0'\n`}</code></pre>\n    <h2>{`1.3.1 - 2018-05-29`}</h2>\n    <h3>{`Added`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MediaTrackGroupHolder`}</inlineCode>{` now has a new field called `}<inlineCode parentName=\"li\">{`formatSupportInfo`}</inlineCode>{`. The `}<inlineCode parentName=\"li\">{`FormatSupportInfoProvider`}</inlineCode>{` instance\ncan be used to query whether a `}<inlineCode parentName=\"li\">{`MediaFormat`}</inlineCode>{` is supported or not.\nFormat support information is based on the decoder’s `}<em parentName=\"li\">{`reported`}</em>{` capabilities, it is best used for informational purposes only.\nA format that is reported unsupported may play correctly or have issues with playback or not play at all.\nThe player will try to avoid unsupported formats, but will try to play them if no other is available.\nSee javadoc for more info.`}</li>\n      <li parentName=\"ul\">{`New class `}<inlineCode parentName=\"li\">{`SignatureUtil`}</inlineCode>{` can now be used to generate and check your Key Hash.\nCall `}<inlineCode parentName=\"li\">{`SignatureUtil.keyHashFromContext(Context)`}</inlineCode>{` in your application.`}</li>\n    </ul>\n    <h3>{`Changed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Updated external dependency: ExoPlayer to version 2.8.1. Please update your `}<inlineCode parentName=\"li\">{`build.gradle`}</inlineCode>{` files with:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gradle\"\n      }}>{`    compile 'com.google.android.exoplayer:exoplayer-core:2.8.1'\n    compile 'com.google.android.exoplayer:exoplayer-ui:2.8.1'\n    compile 'com.google.android.exoplayer:exoplayer-hls:2.8.1'\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MediaTrackChangedListener.onMediaTracksChanged`}</inlineCode>{` now also contains unsupported media formats. Media format support\ncan be queried using the new `}<inlineCode parentName=\"li\">{`FormatSupportInfoProvider`}</inlineCode>{` class.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MediaFormat.mimeType`}</inlineCode>{` is now annotated `}<inlineCode parentName=\"li\">{`@Nullable`}</inlineCode>{`, it was nullable previously but was not annotated by mistake.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Changes affecting only Ads Plugin users`}</strong>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Ads Plugin`}</strong>{`’s external dependencies updated.\nWe had to add an explicit dependency on `}<inlineCode parentName=\"li\">{`customtabs`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`support-v4`}</inlineCode>{` libraries to solve support lib version collision.\nThis happened because ExoPlayer uses different version than Play Services.\nIf you are using the plugin please update your `}<inlineCode parentName=\"li\">{`build.gradle`}</inlineCode>{` files with:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gradle\"\n      }}>{`    compile 'tv.ustream.player:ibm-player-sdk-android-plugin-ads:1.3.1@aar'\n    compile 'com.google.ads.interactivemedia.v3:interactivemedia:3.8.2'\n    compile 'com.google.android.gms:play-services-ads:15.0.1'\n    compile 'com.android.support:customtabs:27.0.0'\n    compile 'com.android.support:support-v4:27.0.0'\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The above change requires a few excludes to be added to the android packagingOptions in gradle.\nWe put these in a separate gradle file that only needs to be applied. See the sample app for details.\nExample usage:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gradle\"\n      }}>{`    apply from: \"\\${rootDir}/packaging-opts.gradle\" // Apply common packaging options from separate file.\n`}</code></pre>\n    <h2>{`1.1.1 - 2018-02-27`}</h2>\n    <h3>{`Changed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Updated external dependency: ExoPlayer to version 2.6.1. Please update your `}<inlineCode parentName=\"li\">{`build.gradle`}</inlineCode>{` files with:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gradle\"\n      }}>{`    compile 'com.google.android.exoplayer:exoplayer-core:2.6.1'\n    compile 'com.google.android.exoplayer:exoplayer-ui:2.6.1'\n    compile 'com.google.android.exoplayer:exoplayer-hls:2.6.1'\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Updated external dependency: JSR-305 library (`}<inlineCode parentName=\"li\">{`com.google.code.findbugs:jsr305`}</inlineCode>{`) to version 3.0.2. Please update your `}<inlineCode parentName=\"li\">{`build.gradle`}</inlineCode>{` files.`}</li>\n      <li parentName=\"ul\">{`Fixed a bug where calling `}<inlineCode parentName=\"li\">{`UstreamPlayer.play()`}</inlineCode>{` after `}<inlineCode parentName=\"li\">{`UstreamPlayer.disconnect()`}</inlineCode>{` on the player while an ad is playing would start\nthe video from the beginning instead of the last known position.`}</li>\n      <li parentName=\"ul\">{`Seeking the player while an ad is playing seeks the original content.`}</li>\n    </ul>\n    <h2>{`1.1.0 - 2018-02-07`}</h2>\n    <h3>{`Added`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Plugin support for the SDK, through replaceable `}<inlineCode parentName=\"li\">{`MediaPlayerModule`}</inlineCode>{`s for custom player behaviour.\nPlugins will be provided by IBM in separate artifacts.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Ads Plugin`}</strong>{` that enables you to insert your own ads into the content, see the documentation and javadoc for details.\nTo use the plugin put: the `}<em parentName=\"li\">{`aar`}</em>{` file in your libs folder and add these lines to your gradle file (Google IMA SDK is a dependency of the Ads Plugin):`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gradle\"\n      }}>{`    compile 'tv.ustream.player:ibm-player-sdk-android-plugin-ads:1.1.0@aar'\n    compile 'com.google.ads.interactivemedia.v3:interactivemedia:3.7.4'\n    compile 'com.google.android.gms:play-services-ads:11.8.0'\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`UstreamPlayer`}</inlineCode>{`’s `}<inlineCode parentName=\"li\">{`initWithContent(...)`}</inlineCode>{` can now be provided with a custom `}<inlineCode parentName=\"li\">{`MediaPlayerModule`}</inlineCode>{` via an optional parameter.`}</li>\n      <li parentName=\"ul\">{`Introduced `}<inlineCode parentName=\"li\">{`getMediaPlayerPlugin()`}</inlineCode>{` to `}<inlineCode parentName=\"li\">{`UstreamPlayer`}</inlineCode>{` to query the current `}<inlineCode parentName=\"li\">{`MediaPlayerModule`}</inlineCode>{`. You will need to cast this instance\nto the actual type that was set in `}<inlineCode parentName=\"li\">{`initWithContent(ContentDescriptor, MediaPlayerModule)`}</inlineCode>{` before use.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MediaPlayerModule`}</inlineCode>{` interface to encapsulate media player plugins. It’s only method is `}<inlineCode parentName=\"li\">{`getSupportedPlayerViewType()`}</inlineCode>{`\nwhich describes the `}<inlineCode parentName=\"li\">{`PlayerView`}</inlineCode>{` that the plugin is compatible with.`}</li>\n    </ul>\n    <h3>{`Changed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Google ExoPlayer’s Core, HLS and UI components are now dependencies of the SDK. Do not forget to add the following lines\nto your build.gradle file:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gradle\"\n      }}>{`    compile 'com.google.android.exoplayer:exoplayer-core:r2.5.1'\n    compile 'com.google.android.exoplayer:exoplayer-ui:r2.5.1'\n    compile 'com.google.android.exoplayer:exoplayer-hls:r2.5.1'\n`}</code></pre>\n    <h2>{`1.0.2 - 2017-11-16`}</h2>\n    <h3>{`Changed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Moved `}<inlineCode parentName=\"li\">{`ContentDescriptor.java`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`ContentType.java`}</inlineCode>{` to package `}<inlineCode parentName=\"li\">{`tv.ustream.content`}</inlineCode>{`. Please re-import these classes.`}</li>\n      <li parentName=\"ul\">{`Renamed interface `}<inlineCode parentName=\"li\">{`tv.ustream.player.android.api.UstreamPlayerAndroid`}</inlineCode>{` to `}<inlineCode parentName=\"li\">{`tv.ustream.player.api.UstreamPlayer`}</inlineCode>{`. Just rename where used, and import.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`UstreamPlayer.setPlayerView(playerView)`}</inlineCode>{` now accepts `}<inlineCode parentName=\"li\">{`tv.ustream.player.api.PlayerView`}</inlineCode>{` interface.\nHowever `}<inlineCode parentName=\"li\">{`tv.ustream.player.android.PlayerView`}</inlineCode>{` should still be used in the XML layout. This is just cosmetics, no change is required on your end.`}</li>\n      <li parentName=\"ul\">{`Fixed occasional connection errors when reconnecting after a reject.`}</li>\n    </ul>\n    <h3>{`Added`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`New callback in `}<inlineCode parentName=\"li\">{`ErrorListener`}</inlineCode>{` to indicate that the content is GeoLocked and can not be watched in the user’s area.\nThis restriction can be applied on your dashboard to black or white list certain countries. When the `}<inlineCode parentName=\"li\">{`onGeoLock()`}</inlineCode>{` callback is fired\nnotify your users that they are unable to view this content from their region.`}</li>\n    </ul>\n    <h3>{`Removed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Deprecated values from `}<inlineCode parentName=\"li\">{`MetaData.java`}</inlineCode>{` class.`}</li>\n    </ul>\n    <h2>{`0.10.2 - 2017-10-09`}</h2>\n    <h3>{`Changed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Jsr305 library is now a requirement. Do not forget to add `}<inlineCode parentName=\"li\">{`compile 'com.google.code.findbugs:jsr305:3.0.1'`}</inlineCode>{` to your build.gradle file.\nThe sample app already contained this dependency, if you copied those dependencies you should be fine.`}</li>\n      <li parentName=\"ul\">{`The method: `}<inlineCode parentName=\"li\">{`UstreamPlayerAndroid.setPlayerView(playerView)`}</inlineCode>{` now accepts `}<inlineCode parentName=\"li\">{`null`}</inlineCode>{`. You can now explicitly remove a previously set `}<inlineCode parentName=\"li\">{`PlayerView`}</inlineCode>{`\nfrom the `}<inlineCode parentName=\"li\">{`ustreamPlayer`}</inlineCode>{` instance, but keep the other listeners. Just like with all other setter methods of the UstreamPlayer\nthe player instance must be detached first, then should be the setter called. The changes will only take effect after calling attach.`}</li>\n    </ul>\n    <h3>{`Added`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Documentation for pre-buffering content to be played later. A previously buffered content can be played instantaneously when calling `}<inlineCode parentName=\"li\">{`play()`}</inlineCode>{`.\nNote: This is only applicable for `}<strong parentName=\"li\">{`RECORDED`}</strong>{` content. See the documentation for more details.`}</li>\n    </ul>\n    <h2>{`0.9.6 - 2017-08-28`}</h2>\n    <h3>{`Changed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Updated media player`}</li>\n      <li parentName=\"ul\">{`Faster track switching in general (fewer rebuffers when changing subtitle tracks for example)`}</li>\n      <li parentName=\"ul\">{`Reduced playback gap on Surface change`}</li>\n    </ul>\n    <h2>{`0.9.3 - 2017-07-24`}</h2>\n    <h3>{`Changed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Correctly display CEA-608 type closed caption names. In some previous versions this displayed a generated name instead of the desired one.`}</li>\n      <li parentName=\"ul\">{`When opening a `}<em parentName=\"li\">{`RECORDED`}</em>{` content `}<inlineCode parentName=\"li\">{`ContentNotPlayable`}</inlineCode>{` is no longer reported if the requested content is not available immediately only after our servers prepare the content.`}</li>\n      <li parentName=\"ul\">{`When connected to a `}<em parentName=\"li\">{`LIVE`}</em>{` content that is Offline at the moment, `}<inlineCode parentName=\"li\">{`ContentNotPlayable`}</inlineCode>{` is not reported right away when the channel goes online.\nWe wait for the content to be available in the requested format. (This only affected the first viewer of the broadcast,\nbecause the server might need time to prepare a supported format.)`}</li>\n    </ul>\n    <h2>{`0.9.2 - 2017-07-20`}</h2>\n    <h3>{`Changed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`MetaData class’ `}<inlineCode parentName=\"li\">{`mediaDate`}</inlineCode>{` field’s value is now always in UTC timezone. Previously it was PST for `}<em parentName=\"li\">{`RECORDED`}</em>{` and UTC for `}<em parentName=\"li\">{`LIVE`}</em>{`.`}</li>\n      <li parentName=\"ul\">{`In a scenario when the client is connected to an offline channel (the SDK is in the `}<inlineCode parentName=\"li\">{`WaitingForContent`}</inlineCode>{` state) and the channel goes live.\nThe `}<inlineCode parentName=\"li\">{`mediaDate`}</inlineCode>{` is now updated with the new value.`}</li>\n      <li parentName=\"ul\">{`Disabled eCDN support for now.`}</li>\n    </ul>\n    <h2>{`0.9.0 - 2017-07-04`}</h2>\n    <h3>{`Added`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Support for multiple players on the same Activity. In order for this to work the API had to be changed.\nMore specifically, the creation of the player changed from `}<inlineCode parentName=\"li\">{`PlayerView.getUstreamPlayer()`}</inlineCode>{` to a Factory based implementation:`}<pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`private final UstreamPlayerFactory ustreamPlayerFactory = new UstreamPlayerFactory(USTREAM_PLAYER_SDK_KEY, context);\n// Where playerId is the identifier of our player. Must be persisted in order to retrieve the same instance \n// in case of a configuration change.\n// IUstreamPlayer interface is changed to UstreamPlayerAndroid.\nUstreamPlayerAndroid ustreamPlayer = ustreamPlayerFactory.createUstreamPlayer(playerId);\nif (!ustreamPlayer.isInitialized()) {\n    ustreamPlayer.initWithContent(contentDescriptor);\n}\n...\n`}</code></pre>{`  The `}<inlineCode parentName=\"li\">{`playerView`}</inlineCode>{` must be set along with the listeners.\nThis enables the player to be initialized (and to be buffered) without a view to render on.\nThis can come in handy when implementing a news feed like application, where the content is in a `}<inlineCode parentName=\"li\">{`RecyclerView`}</inlineCode>{`.\nIt can reduce the time your users need to wait in order to see the video.`}<pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`...\nustreamPlayer.setPlayerListener(listener);\nustreamPlayer.setErrorListener(errorListener);\n...\nustreamPlayer.setPlayerView(playerView);\nustreamPlayer.attach();\n`}</code></pre>{`  For further information, see the documentation.`}</li>\n      <li parentName=\"ul\">{`Support for eCDN.`}</li>\n    </ul>\n    <h3>{`Changed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Various bugfixes include:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Inconsistent player init when a process is restarted from `}<inlineCode parentName=\"li\">{`savedInstanceState`}</inlineCode>{` by the Android framework.\nAfter a process restart the player is no longer implicitly initialized.\nCalling `}<inlineCode parentName=\"li\">{`ustreamPlayer.isInitialized()`}</inlineCode>{` will return `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{`, and the player needs to be initialized manually.`}</li>\n          <li parentName=\"ul\">{`No more crash if the Activity’s context is `}<inlineCode parentName=\"li\">{`ContextThemeWrapper`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\">{`No more crash on certain devices on Android 4.2 with Qualcomm 800 SoCs, where the renderer reported negative video size.`}</li>\n        </ul></li>\n    </ul>\n    <h2>{`0.7.0 - 2017-05-15`}</h2>\n    <h3>{`Changed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Joda-Time dependency has been removed from the sample application (was added in `}{`[0.5.0]`}{`)`}</li>\n    </ul>\n    <h2>{`0.6.0 - 2017-04-19`}</h2>\n    <h3>{`Added`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Track selection API:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Ability to manage subtitles, audio, video tracks`}</li>\n          <li parentName=\"ul\">{`Ability to select specific video formats (resolution, bitrate)`}</li>\n          <li parentName=\"ul\">{`Track selection example in the sample application`}</li>\n          <li parentName=\"ul\">{`Default subtitles are selected and displayed by default`}</li>\n        </ul></li>\n    </ul>\n    <h2>{`0.5.1 - 2017-03-01`}</h2>\n    <h3>{`Changed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Sample application dependencies changed: Joda-Time added.`}</li>\n      <li parentName=\"ul\">{`Player SDK deployment moved from local Maven repo to AAR file. We are switching to the simple AAR file deploy until\na proper artifact repository is available.`}</li>\n      <li parentName=\"ul\">{`Bug fixes and stability improvements`}</li>\n    </ul>\n    <h3>{`Removed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Removed Joda-Time dependency from the user facing interface for greater flexibility. Though Joda-Time is still used\ninside the Player SDK for now, therefore it must be included as a dependency.`}</li>\n    </ul>\n    <h2>{`0.4.0 - 2016-05-31`}</h2>\n    <h3>{`Added`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Added `}<inlineCode parentName=\"li\">{`IUstreamPlayer.isInitialized()`}</inlineCode>{` method to check whether the player is already initialized. This is most useful\non a configuration change event. The information representing the init state of the player does not need to be manually\nsaved anymore.`}</li>\n    </ul>\n    <h3>{`Changed`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Tweaks around `}<inlineCode parentName=\"li\">{`IUstreamPlayer.destroy()`}</inlineCode>{`. This is not bound to Android lifecycle anymore, can be called anywhere\nafter initialization.`}</li>\n      <li parentName=\"ul\">{`Bugfixes and stability improvements`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}